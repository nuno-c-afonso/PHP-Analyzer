def patterns_from_file(filename):
    result = []
    f = open(filename, "r")

    line = f.readline()
    while line:
        line = line.strip()

        if line != "":
            entry_points = f.readline().strip()
            sanitization_functions = f.readline().strip()
            sensitive_sinks = f.readline().strip()
            result.append(VulnerabilityPattern(line, entry_points, sanitization_functions, sensitive_sinks))

        line = f.readline()

    f.close()
    return result


class VulnerabilityPattern:
    def __init__(self, vulnerability_name, entry_points, sanitization_functions, sensitive_sinks):
        self.vulnerabilityName = vulnerability_name
        self.entryPoints = set(entry_points.split(","))
        self.sanitizationFunctions = set(sanitization_functions.split(","))
        self.sensitiveSinks = set(sensitive_sinks.split(","))


###############
#   TO TEST   #
###############
"""
result = patterns_from_file("PatternsFile.txt")

for vp in result:
    print("Vulnerability Name: " + vp.vulnerabilityName)
    print("Entry Points:")
    for ep in vp.entryPoints:
        print("\t" + ep)
    print("Sanitization Functions:")
    for sf in vp.sanitizationFunctions:
        print("\t" + sf)
    print("Sensitive Sinks:")
    for ss in vp.sensitiveSinks:
        print("\t" + ss)
    print("")
"""
